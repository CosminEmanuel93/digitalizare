---

- name: Create fact for testing
  ansible.builtin.set_fact:
    my_custom_fact: "ghs"

- name: Gather server facts
  ansible.builtin.setup:

- name: Ensure groups are created
  ansible.builtin.group:
    name: "{{ item }}"
    state: present
  loop: "{{ testadminusers_groups }}"
  loop_control:
    loop_var: item
  when: ansible_facts is defined

- name: Check for users and create users that have that specific tag
  ansible.builtin.user:
    name: "{{ item.key }}"
    groups: "{{ item.value.groups }}"
    append: true
  loop: "{{ testadminusers_users | dict2items }}"
  loop_control:
    loop_var: item
  when: ansible_facts is defined

- name: Absent state ensure users that donâ€™t have that specific tag are deleted
  ansible.builtin.user:
    name: "{{ item.key }}"
    state: absent
  loop: "{{ testadminusers_users | dict2items }}"
  loop_control:
    loop_var: item
  when: "item.value.groups | length == 0"

- name: Ensure specific groups have sudo access
  ansible.builtin.lineinfile:
    path: "{{ sudoers }}"
    line: "%{{ item }} ALL=(ALL) NOPASSWD: ALL"
    state: present
  loop: "{{ testadminusers_groups }}"
  loop_control:
    loop_var: item
  when: ansible_facts is defined

- name: If any group are deleted
  ansible.builtin.copy:
    src: "{{ sudoers }}"
    dest: /etc/sudoers
    mode: "0440"
    owner: root
    group: root
  when: ansible_facts['kernel'] == 'Linux'
